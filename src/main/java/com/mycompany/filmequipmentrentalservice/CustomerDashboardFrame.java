/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.filmequipmentrentalservice;

import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Neil Patrick
 */
public class CustomerDashboardFrame extends javax.swing.JFrame {

    Transaction cart;
    Customer authCustomer;
    int categoryIdFilter;

    /**
     * Creates new form dashboardFrame
     */
    public CustomerDashboardFrame() {
        initComponents();
        refreshEquipmentList();
        refreshTransactionList();

        List<Category> categories = CategoryService.getAllCategories();

        categoryFilterComboBox.addItem("All categories");

        for (int i = 0; i < categories.size(); i++) {
            categoryFilterComboBox.addItem(categories.get(i).name);
        }
    }

//    UUID id, Date startDate, Date endDate, int customer_id, String status, Double total, List<TransactionItem> items
    public void setAuthCustomer(Customer authCustomer) {
        this.authCustomer = authCustomer;
        if (authCustomer != null) {
            this.cart = new Transaction(UUID.randomUUID(), null, null, this.authCustomer.id, "Pending", 0.0, new ArrayList<TransactionItem>());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Right = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        tab1 = new javax.swing.JPanel();
        Home = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tab2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tab3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        HomeTab = new javax.swing.JPanel();
        allEquipmentScroolPane = new javax.swing.JScrollPane();
        equipmentsTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        SearchTextFeild = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        endDatePicker = new com.toedter.calendar.JDateChooser();
        startDatePicker = new com.toedter.calendar.JDateChooser();
        categoryFilterComboBox = new javax.swing.JComboBox<>();
        warningLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        myCartTab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        myCartTable = new javax.swing.JTable();
        removeAllButton = new javax.swing.JButton();
        cartDurationLabel = new javax.swing.JLabel();
        cartTotalLabel = new javax.swing.JLabel();
        checkOutButton1 = new javax.swing.JButton();
        myCartHeader = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        myTransactionTab = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        customerTransactionLIstTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Customer Dashbard");
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1000, 680));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Right.setBackground(new java.awt.Color(0, 102, 102));
        Right.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        Right.setForeground(new java.awt.Color(255, 255, 255));
        Right.setPreferredSize(new java.awt.Dimension(250, 680));

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 102, 102));
        jButton4.setText("Log out");
        jButton4.setBorder(null);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        tab1.setBackground(new java.awt.Color(32, 178, 170));
        tab1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab1MouseClicked(evt);
            }
        });

        Home.setFont(new java.awt.Font("Arial Black", 0, 16)); // NOI18N
        Home.setForeground(new java.awt.Color(255, 255, 255));
        Home.setText("Home");

        jLabel11.setIcon(new javax.swing.ImageIcon("C:\\Users\\Neil Patrick\\Downloads\\home (2).png")); // NOI18N

        javax.swing.GroupLayout tab1Layout = new javax.swing.GroupLayout(tab1);
        tab1.setLayout(tab1Layout);
        tab1Layout.setHorizontalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Home, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab1Layout.setVerticalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Home))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tab2.setBackground(new java.awt.Color(0, 128, 128));
        tab2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab2MouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial Black", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("My cart");

        jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Users\\Neil Patrick\\Downloads\\shopping-cart (1).png")); // NOI18N

        javax.swing.GroupLayout tab2Layout = new javax.swing.GroupLayout(tab2);
        tab2.setLayout(tab2Layout);
        tab2Layout.setHorizontalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab2Layout.setVerticalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tab3.setBackground(new java.awt.Color(0, 128, 128));
        tab3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab3MouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial Black", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("My Transaction");

        jLabel13.setIcon(new javax.swing.ImageIcon("C:\\Users\\Neil Patrick\\Downloads\\transaction (1).png")); // NOI18N

        javax.swing.GroupLayout tab3Layout = new javax.swing.GroupLayout(tab3);
        tab3.setLayout(tab3Layout);
        tab3Layout.setHorizontalGroup(
            tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab3Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        tab3Layout.setVerticalGroup(
            tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel3.setBackground(new java.awt.Color(0, 204, 204));
        jLabel3.setFont(new java.awt.Font("Calisto MT", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Film Equipments");

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout RightLayout = new javax.swing.GroupLayout(Right);
        Right.setLayout(RightLayout);
        RightLayout.setHorizontalGroup(
            RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tab2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tab3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(RightLayout.createSequentialGroup()
                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(RightLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RightLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        RightLayout.setVerticalGroup(
            RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RightLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(tab1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(tab2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(tab3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 290, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        getContentPane().add(Right, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 680));

        jTabbedPane2.setBackground(new java.awt.Color(72, 209, 204));

        HomeTab.setBackground(new java.awt.Color(255, 255, 255));

        allEquipmentScroolPane.setBackground(new java.awt.Color(255, 255, 255));
        allEquipmentScroolPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        allEquipmentScroolPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        equipmentsTable.setBackground(new java.awt.Color(255, 255, 255));
        equipmentsTable.setForeground(new java.awt.Color(0, 102, 102));
        equipmentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Description", "Daily Fee", "Weekly Fee", "Category", "Is Available"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        equipmentsTable.setGridColor(new java.awt.Color(255, 255, 255));
        equipmentsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                equipmentsTableMouseClicked(evt);
            }
        });
        allEquipmentScroolPane.setViewportView(equipmentsTable);
        if (equipmentsTable.getColumnModel().getColumnCount() > 0) {
            equipmentsTable.getColumnModel().getColumn(0).setMinWidth(30);
            equipmentsTable.getColumnModel().getColumn(0).setPreferredWidth(30);
            equipmentsTable.getColumnModel().getColumn(0).setMaxWidth(30);
            equipmentsTable.getColumnModel().getColumn(2).setMinWidth(325);
            equipmentsTable.getColumnModel().getColumn(2).setPreferredWidth(325);
            equipmentsTable.getColumnModel().getColumn(2).setMaxWidth(325);
        }

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Search Equipent.");

        SearchTextFeild.setBackground(new java.awt.Color(255, 255, 255));
        SearchTextFeild.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SearchTextFeild.setForeground(new java.awt.Color(0, 102, 102));
        SearchTextFeild.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SearchTextFeildKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("Start date");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 102));
        jLabel9.setText("End date");

        endDatePicker.setBackground(new java.awt.Color(255, 255, 255));
        endDatePicker.setForeground(new java.awt.Color(0, 0, 0));
        endDatePicker.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                endDatePickerPropertyChange(evt);
            }
        });

        startDatePicker.setBackground(new java.awt.Color(255, 255, 255));
        startDatePicker.setForeground(new java.awt.Color(0, 102, 102));
        startDatePicker.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                startDatePickerPropertyChange(evt);
            }
        });

        categoryFilterComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                categoryFilterComboBoxItemStateChanged(evt);
            }
        });

        warningLabel.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        warningLabel.setForeground(new java.awt.Color(255, 51, 51));
        warningLabel.setText("Please select date first.");

        jPanel2.setBackground(new java.awt.Color(0, 139, 139));
        jPanel2.setPreferredSize(new java.awt.Dimension(755, 125));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Rent Equipment ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(401, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(71, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        javax.swing.GroupLayout HomeTabLayout = new javax.swing.GroupLayout(HomeTab);
        HomeTab.setLayout(HomeTabLayout);
        HomeTabLayout.setHorizontalGroup(
            HomeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeTabLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(HomeTabLayout.createSequentialGroup()
                .addGroup(HomeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HomeTabLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(HomeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(allEquipmentScroolPane, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(HomeTabLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(HomeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(HomeTabLayout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(3, 3, 3)
                                        .addComponent(SearchTextFeild, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(HomeTabLayout.createSequentialGroup()
                                        .addComponent(warningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(categoryFilterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19))))))
                    .addGroup(HomeTabLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(endDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HomeTabLayout.setVerticalGroup(
            HomeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeTabLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(HomeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeTabLayout.createSequentialGroup()
                        .addGroup(HomeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(SearchTextFeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(HomeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HomeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(startDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8))
                            .addComponent(endDatePicker, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(33, 33, 33)
                .addGroup(HomeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(warningLabel)
                    .addComponent(categoryFilterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allEquipmentScroolPane, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("tab2", HomeTab);

        myCartTab.setBackground(new java.awt.Color(255, 255, 255));

        myCartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Equipment Name", "Category", "Sub Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        myCartTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myCartTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(myCartTable);
        if (myCartTable.getColumnModel().getColumnCount() > 0) {
            myCartTable.getColumnModel().getColumn(0).setMinWidth(35);
            myCartTable.getColumnModel().getColumn(0).setPreferredWidth(35);
            myCartTable.getColumnModel().getColumn(0).setMaxWidth(35);
        }

        removeAllButton.setBackground(new java.awt.Color(0, 102, 102));
        removeAllButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        removeAllButton.setBorder(null);
        removeAllButton.setLabel("Remove all");
        removeAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAllButtonActionPerformed(evt);
            }
        });

        cartDurationLabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        cartDurationLabel.setForeground(new java.awt.Color(0, 102, 102));
        cartDurationLabel.setText("   ");

        cartTotalLabel.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        cartTotalLabel.setForeground(new java.awt.Color(0, 102, 102));
        cartTotalLabel.setText("   ");

        checkOutButton1.setBackground(new java.awt.Color(0, 102, 102));
        checkOutButton1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        checkOutButton1.setText("Check out");
        checkOutButton1.setBorder(null);
        checkOutButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutButton1ActionPerformed(evt);
            }
        });

        myCartHeader.setBackground(new java.awt.Color(0, 139, 139));
        myCartHeader.setPreferredSize(new java.awt.Dimension(477, 126));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("My Cart");

        javax.swing.GroupLayout myCartHeaderLayout = new javax.swing.GroupLayout(myCartHeader);
        myCartHeader.setLayout(myCartHeaderLayout);
        myCartHeaderLayout.setHorizontalGroup(
            myCartHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myCartHeaderLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        myCartHeaderLayout.setVerticalGroup(
            myCartHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myCartHeaderLayout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout myCartTabLayout = new javax.swing.GroupLayout(myCartTab);
        myCartTab.setLayout(myCartTabLayout);
        myCartTabLayout.setHorizontalGroup(
            myCartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myCartTabLayout.createSequentialGroup()
                .addGroup(myCartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myCartTabLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myCartTabLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkOutButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(169, 169, 169))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myCartTabLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(myCartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cartTotalLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 721, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cartDurationLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 721, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addComponent(myCartHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
        );
        myCartTabLayout.setVerticalGroup(
            myCartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myCartTabLayout.createSequentialGroup()
                .addComponent(myCartHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cartDurationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cartTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(myCartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkOutButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(removeAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane2.addTab("tab1", myCartTab);

        myTransactionTab.setBackground(new java.awt.Color(255, 255, 255));
        myTransactionTab.setPreferredSize(new java.awt.Dimension(755, 500));

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setMaximumSize(new java.awt.Dimension(500, 500));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(500, 300));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(468, 203));

        customerTransactionLIstTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Transaction ID", "Start Date", "End Date", "Customer Name", "Status", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerTransactionLIstTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerTransactionLIstTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(customerTransactionLIstTable);

        jPanel1.setBackground(new java.awt.Color(0, 139, 139));
        jPanel1.setPreferredSize(new java.awt.Dimension(755, 125));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("MY TRANSACTIONS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(339, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        javax.swing.GroupLayout myTransactionTabLayout = new javax.swing.GroupLayout(myTransactionTab);
        myTransactionTab.setLayout(myTransactionTabLayout);
        myTransactionTabLayout.setHorizontalGroup(
            myTransactionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myTransactionTabLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myTransactionTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        myTransactionTabLayout.setVerticalGroup(
            myTransactionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myTransactionTabLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("tab3", myTransactionTab);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setForeground(new java.awt.Color(0, 0, 0));
        jPanel4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("My rent");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(361, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(181, 181, 181))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(402, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("tab4", jPanel4);

        getContentPane().add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, -30, 760, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void setColor(JPanel panel) {
        panel.setBackground(new Color(32, 178, 170));
    }

    void resetColor(JPanel panel) {
        panel.setBackground(new Color(0, 128, 128));
    }

    private void refreshTransactionList() {
        DefaultTableModel transactionListTableModel = (DefaultTableModel) customerTransactionLIstTable.getModel();
        transactionListTableModel.setRowCount(0);

        if (this.authCustomer == null) {
            return;
        }
        List<Transaction> transactions = TransactionService.getTransactionsByCustomerId(this.authCustomer.id);

        SimpleDateFormat dateFormatter = new SimpleDateFormat("yyyy-MM-dd");

        for (int i = 0; i < transactions.size(); i++) {
            Transaction transaction = transactions.get(i);

            String total = "₱ " + String.format("%.2f", Double.valueOf(transaction.total.toString()));
            Object[] rowdata = {transaction.id, dateFormatter.format(transaction.startDate), dateFormatter.format(transaction.endDate), transaction.customer.name, transaction.status, total, transaction.items};
            transactionListTableModel.addRow(rowdata);
        }
    }

    private void refreshEquipmentList() {
        DefaultTableModel equipmentsTableModel = (DefaultTableModel) equipmentsTable.getModel();
        Date startDate = new Date();
        Date endDate = new Date();

        if (this.cart != null && this.cart.startDate != null && this.cart.endDate != null) {
            startDate = this.cart.startDate;
            endDate = this.cart.endDate;
        }

        List<Equipment> equipments = EquipmentService.getAllEquipments(startDate, endDate);

        equipmentsTableModel.setRowCount(0);

        Category category = null;

        if (categoryFilterComboBox.getSelectedIndex() >= 1) {
            category = CategoryService.getCategoryByName(categoryFilterComboBox.getSelectedItem().toString());
        }

        for (int i = 0; i < equipments.size(); i++) {
            Equipment equipment = equipments.get(i);
            if ("Active".equals(equipment.status)) {
                if (category == null) {
                    Object[] rowData = {equipment.id, equipment.name, equipment.description, equipment.daily_fee, equipment.weekly_fee, equipment.category.name, equipment.getIsAvailableText()};
                    equipmentsTableModel.addRow(rowData);
                } else {
                    if (category.id == equipment.category_id) {
                        Object[] rowData = {equipment.id, equipment.name, equipment.description, equipment.daily_fee, equipment.weekly_fee, equipment.category.name, equipment.getIsAvailableText()};
                        equipmentsTableModel.addRow(rowData);
                    }
                }

            }

        }

        equipmentsTable.setRowSorter(null); // reset the table sort
        SearchTextFeild.setText(""); // reset search text feild

    }

    private void refreshCartList() {
        DefaultTableModel cartTableModel = (DefaultTableModel) myCartTable.getModel();
        cartTableModel.setRowCount(0);

        for (int i = 0; i < this.cart.items.size(); i++) {
            TransactionItem item = this.cart.items.get(i);
            Object[] rowData = {item.equipment.id, item.equipment.name, item.equipment.category.name, item.sub_total};
            cartTableModel.addRow(rowData);
        }

        equipmentsTable.setRowSorter(null); // reset the table sort
        SearchTextFeild.setText(""); // reset search text feild

    }


    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        int response = JOptionPane.showConfirmDialog(this, "Are you sure you want to log out?", "Select Option", JOptionPane.YES_NO_OPTION);
        if (response == JOptionPane.YES_OPTION) {
            this.setAuthCustomer(null);
            this.dispose();
            JFrame frame = new JFrame("Film Equipment Rental Service");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.add(new CustomerLogin()); // Add the Login panel to the frame
            frame.pack(); // Resize the frame to fit the component
            frame.setVisible(true);
            frame.setLocationRelativeTo(null);

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void SearchTextFeildKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchTextFeildKeyPressed
        // TODO add your handling code here:
        DefaultTableModel obj = (DefaultTableModel) equipmentsTable.getModel();
        TableRowSorter<DefaultTableModel> obj1 = new TableRowSorter<>(obj);
        equipmentsTable.setRowSorter(obj1);
        obj1.setRowFilter(RowFilter.regexFilter(SearchTextFeild.getText()));

    }//GEN-LAST:event_SearchTextFeildKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        refreshEquipmentList();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void equipmentsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_equipmentsTableMouseClicked
        int i = equipmentsTable.getSelectedRow();
        int id = (int) equipmentsTable.getValueAt(i, 0);
        String is_available = (String) equipmentsTable.getValueAt(i, 6);

        if (this.cart.getTotalNumberOfDays() <= 0) {
            return;
        }
        if ("Not Available".equals(is_available)) {
            JOptionPane.showMessageDialog(myTransactionTab, "This equipment is not available on your selected Date.");
            return;
        }

        if (!this.cart.isEquipmentAlreadyAdded(id)) {
            int response = JOptionPane.showConfirmDialog(this, "Do you want to add this?", "Select Option", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                Equipment equipment = EquipmentService.getEquipmentById(id);
                Double subTotal = (this.cart.getNumberOfDays() * equipment.daily_fee) + (this.cart.getNumberOfWeeks() * equipment.weekly_fee);
                TransactionItem item = new TransactionItem(UUID.randomUUID(), this.cart.id, equipment.id, subTotal);
                item.setEquipment(equipment);
                this.cart.addItem(item);
                refreshCartList();
                updateCartSummary();
            }
        }
    }//GEN-LAST:event_equipmentsTableMouseClicked

    private void removeAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAllButtonActionPerformed
        // TODO add your handling code here:
        if (this.cart.items.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Cart is Empty.");
        } else {
            int response = JOptionPane.showConfirmDialog(this, "Do you want to remove this?", "Select Option", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                this.cart.clearItems();
                refreshCartList();
                updateCartSummary();
            }
        }

    }//GEN-LAST:event_removeAllButtonActionPerformed

    private void myCartTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myCartTableMouseClicked
        // TODO add your handling code here:
        int i = myCartTable.getSelectedRow();
        int response = JOptionPane.showConfirmDialog(this, "Do you want to remove this?", "Select Option", JOptionPane.YES_NO_OPTION);
        if (response == JOptionPane.YES_OPTION) {
            this.cart.removeItem(i);
            refreshCartList();
            updateCartSummary();
        }
    }//GEN-LAST:event_myCartTableMouseClicked

    private void startDatePickerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_startDatePickerPropertyChange
        Date startDate = startDatePicker.getDate();

        if (startDate != null) {
            this.cart.setStartDate(startDate);
            warningLabel.setText("Please Select End Date. ");
        }

        refreshEquipmentList();
        updateCartSummary();
    }//GEN-LAST:event_startDatePickerPropertyChange

    private void endDatePickerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_endDatePickerPropertyChange
        Date endDate = endDatePicker.getDate();

        if (endDate != null) {
            this.cart.setEndDate(endDate);
            warningLabel.setText("");
        }

        refreshEquipmentList();
        updateCartSummary();
    }//GEN-LAST:event_endDatePickerPropertyChange

    private void checkOutButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutButton1ActionPerformed
        if (this.cart.items.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Cart is Empty.");

        } else {
            TransactionService.saveTransaction(this.cart);
            for (TransactionItem item : this.cart.items) {
                TransactionItemService.saveTransactionItem(item);
            }
            JOptionPane.showMessageDialog(null, "Succesful!");

            // JOptionPane.showConfirmDialog(this, "Success! ", "Select Option ", JOptionPane.OK_OPTION);
            this.cart.clearItems();
            refreshCartList();
            updateCartSummary();
            refreshEquipmentList();

        }


    }//GEN-LAST:event_checkOutButton1ActionPerformed

    private void customerTransactionLIstTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTransactionLIstTableMouseClicked
        // TODO add your handling code here:
        int i = customerTransactionLIstTable.getSelectedRow();
        UUID transactionId = (UUID) customerTransactionLIstTable.getValueAt(i, 0);
        String total = (String) customerTransactionLIstTable.getValueAt(i, 5);
        String startDate = "From : " + (String) customerTransactionLIstTable.getValueAt(i, 1);
        String endDate = "   To : " + (String) customerTransactionLIstTable.getValueAt(i, 2);
        String status = "Status: " + (String) customerTransactionLIstTable.getValueAt(i, 4);
        

        List<TransactionItem> items = TransactionItemService.getTransactionItemsByTransactionId(transactionId);
        Transaction transaction = TransactionService.getTransactionsByTransactionId(transactionId);

        StringBuilder message = new StringBuilder();
        message.append("Transaction ID: ").append(transactionId).append("\n");
        message.append(startDate).append(endDate).append("   Total days:  ").append(transaction.getDateRangeSummary()).append("\n");
        message.append(status).append("\n\n");

        for (TransactionItem item : items) {
            double sub_total = item.sub_total;
            String formatted_sub_total = String.format("%.2f", sub_total);

            message.append("Equipment Name: ").append(item.equipment.name).append("\n");
            message.append("Subtotal: ₱ ").append(formatted_sub_total).append("\n\n");

        }
        message.append("________________________________________________").append("\n");
        
        message.append("Total: ").append(total);

        Object[] options = {"Return equipments.", "Close"};
        SimpleDateFormat dateFormatter = new SimpleDateFormat("yyyy-MM-dd");

        if (((String) customerTransactionLIstTable.getValueAt(i, 4)).equals("Ongoing") ) {
            int choice = JOptionPane.showOptionDialog(null, message.toString(), "Transaction Details", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

            if (choice == 0) {
                TransactionService.updateTransactionStatus("Completed", transactionId);
                refreshTransactionList();
            }
        } else {
            JOptionPane.showMessageDialog(null, message.toString(), "Transaction Details", JOptionPane.INFORMATION_MESSAGE);

        }

    }//GEN-LAST:event_customerTransactionLIstTableMouseClicked

    private void categoryFilterComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_categoryFilterComboBoxItemStateChanged
        refreshEquipmentList();
    }//GEN-LAST:event_categoryFilterComboBoxItemStateChanged

    private void tab1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab1MouseClicked
        // TODO add your handling code here:
        jTabbedPane2.setSelectedIndex(0);
        setColor(tab1);
        resetColor(tab2);
        resetColor(tab3);
    }//GEN-LAST:event_tab1MouseClicked

    private void tab2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab2MouseClicked
        // TODO add your handling code here:
        jTabbedPane2.setSelectedIndex(1);
        setColor(tab2);
        resetColor(tab1);
        resetColor(tab3);

    }//GEN-LAST:event_tab2MouseClicked

    private void tab3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab3MouseClicked
        // TODO add your handling code here:
        jTabbedPane2.setSelectedIndex(2);
        refreshTransactionList();
        setColor(tab3);
        resetColor(tab1);
        resetColor(tab2);

    }//GEN-LAST:event_tab3MouseClicked

    public void updateCartSummary() {
        if (this.cart == null) {
            return;
        }

        if (this.cart.startDate != null && this.cart.endDate != null) {
            cartDurationLabel.setText(this.cart.startDate.toString() + " - " + this.cart.endDate.toString() + " : " + this.cart.getDateRangeSummary());
        }

        cartTotalLabel.setText("Total: " + this.cart.total.toString());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerDashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerDashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerDashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerDashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerDashboardFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Home;
    private javax.swing.JPanel HomeTab;
    private javax.swing.JPanel Right;
    private javax.swing.JTextField SearchTextFeild;
    private javax.swing.JScrollPane allEquipmentScroolPane;
    private javax.swing.JLabel cartDurationLabel;
    private javax.swing.JLabel cartTotalLabel;
    private javax.swing.JComboBox<String> categoryFilterComboBox;
    private javax.swing.JButton checkOutButton1;
    private javax.swing.JTable customerTransactionLIstTable;
    private com.toedter.calendar.JDateChooser endDatePicker;
    private javax.swing.JTable equipmentsTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JPanel myCartHeader;
    private javax.swing.JPanel myCartTab;
    private javax.swing.JTable myCartTable;
    private javax.swing.JPanel myTransactionTab;
    private javax.swing.JButton removeAllButton;
    private com.toedter.calendar.JDateChooser startDatePicker;
    private javax.swing.JPanel tab1;
    private javax.swing.JPanel tab2;
    private javax.swing.JPanel tab3;
    private javax.swing.JLabel warningLabel;
    // End of variables declaration//GEN-END:variables
}
